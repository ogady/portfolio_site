{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/AtCoderBeginnersSelection1/","webpackCompilationHash":"b31ab5cef85b607ff3b3","result":{"data":{"site":{"siteMetadata":{"title":"Takumi Ogawa - @ogady","user":{"name":"Takumi Ogawa","github":"ogady","qiita":"ogady","twitter":"_ogady_","facebook":"takumi.ogawa.37266","linkedin":"takumi-ogawa-869046195"}}},"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>自分が文系出身ということもあり、コンピューターサイエンスの基礎があまりにもわからない。</p>\n<p>ここらでちゃんと勉強しようと思い、まずはデータ構造とアルゴリズムの基礎から勉強していくことにした。</p>\n<p>とりあえず、<a href=\"https://atcoder.jp/contests/abs\">AtCoder Beginers Selection</a>（以下 ABS）をやってみる。</p>\n<p>ABS とは、初心者向けに AtCoder の過去問から 10 問ピックアップされたもので、競プロ初心者が最初に解いてみると良いらしい。</p>\n<p>実業務にも活かしていく前提なので、言語は<code class=\"language-text\">Go</code>で！</p>\n<h2>Go 言語で競プロの問題を解くために</h2>\n<h3>入力値の受け取り</h3>\n<p>兎にも角にも入力を受け取らないと話にならない。</p>\n<p>Go 言語で AtCoder からの入力値を受け取るには、こんな感じになります。</p>\n<p>この組み合わせで大体の入力は処理できるはず。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token comment\">/*\n 入力形式\n --------\n n (数字)\n --------\n*/</span>\n<span class=\"token keyword\">var</span> n <span class=\"token builtin\">int</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\n 入力形式\n --------\n s (文字列)\n --------\n*/</span>\n<span class=\"token keyword\">var</span> s <span class=\"token builtin\">string</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\n 入力形式\n --------\n n1 n2\n --------\n*/</span>\n<span class=\"token keyword\">var</span> n1<span class=\"token punctuation\">,</span> n2 <span class=\"token builtin\">int</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\n 入力形式\n --------\n N\n n1\n .\n .\n nN\n --------\n*/</span>\n<span class=\"token keyword\">var</span> N <span class=\"token builtin\">int</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span>\nlist <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n 入力形式\n --------\n N\n s1 s2 .. sN\n --------\n*/</span>\n<span class=\"token keyword\">var</span> N <span class=\"token builtin\">int</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewScanner</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stdin<span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsList <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Fields</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>ABS を解いていく</h2>\n<h3>0. <a href=\"https://atcoder.jp/contests/abs/tasks/practice_1\">Welcome to AtCoder</a></h3>\n<p>【概要】</p>\n<p>チュートリアル</p>\n<p>整数 3 個と、文字列が与えられ、その整数の和と、文字列を出力します。</p>\n<p>この問題は特に悩むところもないです。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">var</span> s <span class=\"token builtin\">string</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %s\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token operator\">+</span>b<span class=\"token operator\">+</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>1. <a href=\"https://atcoder.jp/contests/abs/tasks/abc086_a\">Product</a></h3>\n<p>【概要】</p>\n<p>偶奇の判定。</p>\n<p>これも特に悩むところは無し。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Odd\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>2. <a href=\"https://atcoder.jp/contests/abs/tasks/abc081_a\">Placing Marbles</a></h3>\n<p>【概要】</p>\n<p>与えられた数列を受け取り、その中に ”1”が何個あるか求めます。</p>\n<p>全探索です。</p>\n<p>これは for 文で一文字ずつ判定しても良いですが、go の<code class=\"language-text\">strings.Count()</code>を使用すレバサクッとできます。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strings\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> s <span class=\"token builtin\">string</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>3. <a href=\"https://atcoder.jp/contests/abs/tasks/abc081_a\">Shift only</a></h3>\n<p>【概要】</p>\n<p>N 個の整数が与えられ、その全てが偶数である時、その整数を 2 で割った値に変換します。これを何回行うことができるか求めるもの。</p>\n<p>全探索を使用して、行う操作をそのまま実装すると以下のようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"bufio\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"os\"</span>\n    <span class=\"token string\">\"strconv\"</span>\n    <span class=\"token string\">\"strings\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> cnt<span class=\"token punctuation\">,</span> n <span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">var</span> ns <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">var</span> existOdd <span class=\"token builtin\">bool</span>\n\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span>\n    s <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewScanner</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stdin<span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ss <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Fields</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> ss <span class=\"token punctuation\">{</span>\n        j<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n        ns <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ns<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 与えたれた整数が全て2で割り切れるか確認</span>\n        <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> ns <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> v<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>existOdd <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 与えたれた整数が全て2で割り切れなければfor文を抜ける</span>\n        <span class=\"token keyword\">if</span> existOdd <span class=\"token punctuation\">{</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 各数字を2で割る</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> ns <span class=\"token punctuation\">{</span>\n            ns<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">}</span>\n        cnt<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"AtCoder Beginers Selectionをgoで解いてみる(前編)","date":"07 March, 2020","tags":["AtCoder","Go"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/AtCoderBeginnersSelection1/"}}}
{"version":3,"sources":["webpack:///./src/components/abouts/QiitaItems.tsx","webpack:///./src/components/abouts/GitHubRepos.tsx","webpack:///./src/components/abouts/Career.tsx","webpack:///./src/components/abouts/Certification.tsx","webpack:///./src/components/abouts/Skills.tsx","webpack:///./src/components/abouts/TechBlog.tsx","webpack:///./src/components/abouts/Slides.tsx","webpack:///./src/components/abouts/Works.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["QiitaItems","posts","user","items","map","post","node","id","title","created_at","url","createdAt","createDateFormat","key","className","href","GitHubRepos","repos","repo","name","description","Career","Certification","Skills","TechBlog","Slides","slides","item","pubDate","guid","link","thumbnail","src","alt","Works","data","fluid","pixiv","childImageSharp","HomeIndex","qiitaPosts","allQiitaPost","edges","allGithubData","site","siteMetadata","allSlides","filter","index","Head","Header","length","github","speaker_deck","qiita","query","createHTML","this"],"mappings":"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","file":"component---src-pages-index-tsx-c510d6204abfc04c0ac3.js","sourcesContent":["import React from 'react'\nimport { createDateFormat } from '../../lib/utils'\n\nexport type Post = {\n  node: {\n    id: string\n    title: string\n    created_at: string\n    url: string\n  }\n}\n\ntype QiitaItemsProps = {\n  posts: Post[]\n  user: string\n}\n\nconst QiitaItems: React.FC<QiitaItemsProps> = ({ posts, user }) => {\n  const items = posts.map(post => {\n    const { id, title, created_at, url } = post.node\n    const createdAt = createDateFormat(created_at, 'YYYY-MM-DD')\n\n    return (\n      <li key={id}>\n        {createdAt}\n        <a className=\"item-title\" href={url}>\n          {title}\n        </a>\n      </li>\n    )\n  })\n\n  return (\n    <section id=\"qiita\">\n      <h2>Qiita</h2>\n      <ul className=\"alt\">{items}</ul>\n      <ul className=\"actions\">\n        <li>\n          <a href={`https://qiita.com/${user}`} className=\"button\">\n            Show More Items\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default QiitaItems\n","import React from 'react'\nimport Emoji from 'react-emoji-render'\n\nexport type Repo = {\n  node: {\n    id: string\n    url: string\n    name: string\n    description: string\n  }\n}\n\ntype GitHubReposProps = {\n  repos: Repo[]\n  user: string\n}\n\nconst GitHubRepos: React.FC<GitHubReposProps> = ({ repos, user }) => {\n  const items = repos.map(repo => {\n    const { id, url, name, description } = repo.node\n    return (\n      <li key={id}>\n        <a href={url}>{name}</a>\n        <br />\n        <span>{description}</span>\n      </li>\n    )\n  })\n\n  return (\n    <section id=\"github\">\n      <h2>GitHub</h2>\n      <ul className=\"alt\">{items}</ul>\n      <ul className=\"actions\">\n        <li>\n          <a href={`https://github.com/${user}`} className=\"button\">\n            Show More Items\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default GitHubRepos\n","import React from 'react'\n\ntype CareerProps = {}\nconst Career: React.FC<CareerProps> = ({ }) => {\n  return (\n    <section id=\"Career\">\n      <h2>Career</h2>\n      <p>\n        <ul>\n          <li>\n            <h3>\n              &nbsp;\n              <a href={`https://eure.jp/`}>\n                株式会社エウレカ（Eureka, Inc.） &nbsp;\n              </a>\n              (Jun, 2021〜)\n            </h3>\n            <ul>\n              <li>\n                <h4>SREチーム(Jun, 2021~)</h4>\n                <ul>\n                  <li>スケールに伴うメインプロダクトAPIのサブネットの拡張</li>\n                  <li>SLI/SLOの再構築・再定義</li>\n                  <li>S3セキュリティ強化</li>\n                  <li>Terraformパイプラインの改善</li>\n                  <li>ECS → EKS移行</li>\n                  <li>MySQL v8アップグレード</li>\n                  <li>Progressive delivery導入</li>\n                  <li>Pull Requestテスト環境自動生成機構構築</li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <h3>\n              &nbsp;\n              <a href={`http://www.mediado.jp/mediado/`}>\n                株式会社メディアドゥ &nbsp;\n              </a>\n              (Oct, 2019〜 May, 2021)\n\n            </h3>\n            <ul>\n              <li>\n                <h4>電子書籍取次システムクラウドリフト案件(May, 2020〜)</h4>\n                <ul>\n                  <li>TerraformによるAWSインフラ構築</li>\n                  <li>\n                    新規追加機能をフロントエンド〜インフラまで開発（フロントエンド:Angular、バックエンド:Go）\n                  </li>\n                  <li>\n                    既存PHPからのAWSリソースへのアクセスや認証機能をGoのAPIに切り出し、マイクロサービス化\n                  </li>\n                  <li>PHPを5系から7系へバージョンアップ対応</li>\n                  <div className=\"box\">\n                    【使用技術】\n                    <ul>\n                      <li>使用言語：Go, PHP, TypeScript(Angular), Python</li>\n                      <li>\n                        インフラ：AWS(Fargate, Aurora, EFS, SQS, Lambda, EC2,\n                        S3, CodePipeline etc...)\n                      </li>\n                      <li>Webサーバー：nginx</li>\n                      <li>資産管理：GitHub</li>\n                    </ul>\n                  </div>\n                </ul>\n              </li>\n              <li>\n                <h4>Datadog検証(Apr, 2020〜June, 2020)</h4>\n                <ul>\n                  <li>兼務でSREチームにJoinし、Datadogを用いたコンテナ監視</li>\n                  <li>GoアプリケーションのAPM監視の検証</li>\n                  <li>Datadogログ集約、アラート機能検証</li>\n                  <div className=\"box\">\n                    【使用技術】\n                    <ul>\n                      <li>使用言語：Go</li>\n                      <li>インフラ：AWS</li>\n                      <li>監視基盤：Datadog</li>\n                      <li>資産管理：GitHub</li>\n                    </ul>\n                  </div>\n                </ul>\n              </li>\n              <li>\n                <h4>電子書籍取次システム案件(Oct, 2019〜June, 2020)</h4>\n                <ul>\n                  <li>\n                    電子書籍取次システム移行用のマイグレーションシステムの開発\n                  </li>\n                  <li>AWSを利用した、EPUBチェック機能の新規開発</li>\n                  <li>ChatOpsによる業務効率化 (Slack API)</li>\n                  <div className=\"box\">\n                    【使用技術】\n                    <ul>\n                      <li>使用言語：Go</li>\n                      <li>\n                        インフラ：AWS(EC2, RDS, DynamoDB, SQS, Lambda, CDK\n                        etc...)\n                      </li>\n                      <li>資産管理：GitHub</li>\n                    </ul>\n                  </div>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <hr />\n            <h3>\n              &nbsp;\n              <a href={`https://www.mizuho-ir.co.jp`}>\n                みずほ情報総研株式会社&nbsp;\n              </a>\n              (Apr, 2017 〜 July, 2019)\n            </h3>\n\n            <ul>\n              <li>\n                <h4>FintechWG(モダン技術知見習得を目的とする、社内施策)</h4>\n                <ul>\n                  <li>\n                    某空港管理会社の案件で、フードコートのキャッシュレスWebアプリケーションのプロトタイプを作成。\n                    <div className=\"box\">\n                      【使用技術】\n                      <ul>\n                        <li>フレームワーク：Python Django</li>\n                        <li>nginx, wsgi, AWS(EC2, S3)</li>\n                        <li>データベース：MySQL</li>\n                        <li>stripe(決済系API)</li>\n                        <li>資産管理：GitHub</li>\n                      </ul>\n                    </div>\n                  </li>\n                </ul>\n                <ul>\n                  <li>\n                    銀行システムの内部API化案件に参画。主に技術検証チームとしてマイクロサービス開発とAPI\n                    Management製品の実機比較検証を実施。\n                    <div className=\"box\">\n                      【使用技術】\n                      <ul>\n                        <li>フレームワーク：Java(Spring boot)</li>\n                        <li>クラウド環境：AWS(lambda, S3, API gateway)</li>\n                        <li>\n                          オンプレミス環境：IBM Cloud(API Connect, API Manager,\n                          API Developer Portal)\n                        </li>\n                      </ul>\n                    </div>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n            <ul>\n              <li>\n                <h4>全銀24時間365日対応案件</h4>\n                <ul>\n                  <li>\n                    他行間の内国為替取引を担う全銀システムのサービス24時間化に伴い、みずほ銀行の全銀接続機能のシステムアップグレードを行うもの。主にPMとして、要件定義、基本設計、詳細設計、単体テスト、結合テスト、シナリオテスト、運用テストを推進。\n                    自身でも、テスターとして、単体テスト、結合テストの実施とバグ修正を実施\n                    <div className=\"box\">\n                      【使用技術】\n                      <ul>\n                        <li>使用言語：C言語</li>\n                        <li>基盤：Linux(RedHat Enterprise)</li>\n                        <li>資産管理：SVN</li>\n                      </ul>\n                    </div>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </p>\n    </section>\n  )\n}\n\nexport default Career\n","import React from 'react'\n\ntype Certification = {}\nconst Certification: React.FC<Certification> = ({ }) => {\n  return (\n    <section id=\"Certifications\">\n      <h2>Certifications</h2>\n      <p>\n        <ul className=\"alt\">\n          <li>\n            <h4>2021-12 AWS Certified Data Analytics - Specialty</h4>\n          </li>\n          <li>\n            <h4>2019-07 AWS Certified Solutions Architect Associate</h4>\n          </li>\n          <li>\n            <h4>2018-05 応用情報技術者</h4>\n          </li>\n          <li>\n            <h4>2017-05 基本情報技術者</h4>\n          </li>\n        </ul>\n      </p>\n    </section>\n  )\n}\n\nexport default Certification\n","import React from 'react'\n\ntype SkillsProps = {}\nconst Skills: React.FC<SkillsProps> = ({ }) => {\n  return (\n    <section id=\"Skills\">\n      <h2>Skills</h2>\n      <div className=\"skill-container\">\n        <div className=\"skill-category\">\n          <h3>プログラミング言語</h3>\n          <ul className=\"skill-list\">\n            <li>Go</li>\n            <li>TypeScript / JavaScript</li>\n            <li>Python</li>\n            <li>PHP</li>\n          </ul>\n        </div>\n\n        <div className=\"skill-category\">\n          <h3>インフラ / クラウド</h3>\n          <ul className=\"skill-list\">\n            <li>AWS / Google Cloud</li>\n            <li>Kubernetes</li>\n            <li>Docker</li>\n            <li>Terraform</li>\n            <li>Linux</li>\n          </ul>\n        </div>\n\n        <div className=\"skill-category\">\n          <h3>Data基盤</h3>\n          <ul className=\"skill-list\">\n            <li>BigQuery</li>\n            <li>dbt</li>\n            <li>dagster</li>\n          </ul>\n        </div>\n\n        <div className=\"skill-category\">\n          <h3>データベース</h3>\n          <ul className=\"skill-list\">\n            <li>MySQL</li>\n            <li>DynamoDB</li>\n          </ul>\n        </div>\n\n        <div className=\"skill-category\">\n          <h3>DevOps / SRE</h3>\n          <ul className=\"skill-list\">\n            <li>CI/CD</li>\n            <li>SLI/SLO設計</li>\n            <li>Progressive Delivery</li>\n            <li>Datadog</li>\n          </ul>\n        </div>\n\n        <div className=\"skill-category\">\n          <h3>その他</h3>\n          <ul className=\"skill-list\">\n            <li>Git / GitHub</li>\n            <li>Nginx</li>\n            <li>API設計</li>\n            <li>セキュリティ</li>\n            <li>ChatOps (Slack API)</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Skills\n","import React from 'react'\n\ntype TechBlog = {}\nconst TechBlog: React.FC<TechBlog> = ({ }) => {\n  return (\n    <section id=\"TechBlog\">\n      <h2>TechBlog</h2>\n      <p>\n        <ul className=\"alt\">\n          <li>\n            2024-12-19\n            <a\n              className=\"item-title\"\n              href=\"https://medium.com/eureka-engineering/dbt-1-9-0-%E3%81%A7%E5%B0%8E%E5%85%A5%E3%81%95%E3%82%8C%E3%81%9Fmicrobatch%E3%82%92bigquery%E3%81%A7%E6%A4%9C%E8%A8%BC%E3%81%99%E3%82%8B-2ef4f450f346\"\n            >\n              dbt 1.9.0 で導入されたmicrobatchをBigQueryで検証する\n            </a>\n          </li>\n          <li>\n            2023-12-10\n            <a\n              className=\"item-title\"\n              href=\"https://medium.com/eureka-engineering/%E9%96%8B%E7%99%BAbranch%E3%81%94%E3%81%A8%E3%81%AE%E5%80%8B%E5%88%A5%E7%92%B0%E5%A2%83-adhoc-dev%E7%92%B0%E5%A2%83-%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%97-%E9%96%8B%E7%99%BA%E3%83%95%E3%83%AD%E3%83%BC%E3%82%92%E6%94%B9%E5%96%84%E3%81%97%E3%81%9F%E8%A9%B1-0fb58bcc7129\"\n            >\n              開発Branchごとの個別環境（Adhoc Dev環境）を構築し、開発フローを改善した話\n            </a>\n          </li>\n          <li>\n            2022-12-21\n            <a\n              className=\"item-title\"\n              href=\"https://medium.com/eureka-engineering/argo-rollouts%E3%81%A8pairs%E3%81%AE%E3%83%87%E3%83%AA%E3%83%90%E3%83%AA%E3%83%BC%E6%88%A6%E7%95%A5-progressive-delivery%E3%81%B8%E3%81%AE%E7%A7%BB%E8%A1%8C-266cb2af8d20\"\n            >\n              Argo RolloutsとPairsのデリバリー戦略 -Progressive Deliveryへの移行-\n            </a>\n          </li>\n          <li>\n            2021-12-18\n            <a\n              className=\"item-title\"\n              href=\"https://medium.com/eureka-engineering/s3-security-case-study-6c143ae8ba11\"\n            >\n              ケーススタディで改めて学ぶ、S3をセキュアに運用するために気をつけるべきこと\n            </a>\n          </li>\n          <li>\n            2021-12-18\n            <a\n              className=\"item-title\"\n              href=\"https://medium.com/eureka-engineering/s3-security-case-study-6c143ae8ba11\"\n            >\n              ケーススタディで改めて学ぶ、S3をセキュアに運用するために気をつけるべきこと\n            </a>\n          </li>\n          <li>\n            2021-12-18\n            <a\n              className=\"item-title\"\n              href=\"https://medium.com/eureka-engineering/s3-security-case-study-6c143ae8ba11\"\n            >\n              ケーススタディで改めて学ぶ、S3をセキュアに運用するために気をつけるべきこと\n            </a>\n          </li>\n          <li>\n            2020-08-05\n            <a\n              className=\"item-title\"\n              href=\"https://techdo.mediado.jp/entry/2020/08/05/111437\"\n            >\n              Fargate+FireLens+EFSでログ管理\n            </a>\n          </li>\n          <li>\n            2020-06-09\n            <a\n              className=\"item-title\"\n              href=\"https://techdo.mediado.jp/entry/2020/06/09/100000\"\n            >\n              メディアドゥにもSREチームができました！\n            </a>\n          </li>\n          <li>\n            2020-03-13\n            <a\n              className=\"item-title\"\n              href=\"https://techdo.mediado.jp/entry/2020/03/13/110000\"\n            >\n              goroutineでバッチ処理時間を大幅に改善した話\n            </a>\n          </li>\n        </ul>\n      </p>\n    </section>\n  )\n}\n\nexport default TechBlog\n","import React from 'react'\nimport { createDateFormat } from '../../lib/utils'\n\nexport type Item = {\n  pubDate: string\n  guid: string\n  link: string\n  thumbnail: string\n  title: string\n}\n\ntype SlidesProps = {\n  items: Item[]\n  user: string\n}\n\nconst Slides: React.FC<SlidesProps> = ({ items, user }) => {\n  const slides = items.map(item => {\n    const { pubDate, guid, link, thumbnail, title } = item\n    const createdAt = createDateFormat(pubDate, 'YYYY-MM-DD')\n\n    return (\n      <article className=\"4u 12u$(xsmall) work-item\" key={guid}>\n        <a href={link} className=\"image fit thumb\">\n          <img src={thumbnail} alt=\"\" />\n        </a>\n        <a href={link} className=\"slide-title\">\n          <h3>{title}</h3>\n        </a>\n        <p>{createdAt}</p>\n      </article>\n    )\n  })\n\n  return (\n    <section id=\"slides\">\n      <h2>Slides</h2>\n      <div className=\"row\">{slides}</div>\n      <ul className=\"actions\">\n        <li>\n          <a href={`https://speakerdeck.com/${user}`} className=\"button\">\n            Show More Slides\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default Slides\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\ntype WorksProps = {\n}\n\nconst Works: React.FC<WorksProps> = ({ }) => {\n    const data = useStaticQuery(graphql`\n    {\n      pixiv: file(relativePath: { eq: \"Pixiv.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n    return (\n        <section id=\"Works\">\n            <h2>Works</h2>\n            <div className=\"row\">\n                <article className=\"4u 12u$(xsmall) work-item\" >\n                    <a href={`https://hub.vroid.com/characters/1171131286256569911/models/2386843957743529183`} className=\"image fit thumb\">\n                        <img src={`https://vroid-hub.pximg.net/c/300x400_a2_g5/images/portrait_images/1606028/7118066965436116654.png`} alt=\"\" />\n                    </a>\n                    <a href={`https://hub.vroid.com/users/6571484`} className=\"slide-title\">\n                        <h3>VRoid Models</h3>\n                    </a>\n                </article>\n                <article className=\"4u 12u$(xsmall) work-item\" >\n                    <a href={`https://www.pixiv.net/users/6571484`} className=\"image fit thumb\">\n                        <Img fluid={data.pixiv.childImageSharp.fluid} />\n                    </a>\n                    <a href={`https://www.pixiv.net/users/6571484`} className=\"slide-title\">\n                        <h3>Paintings(Pixiv)</h3>\n                    </a>\n                </article>\n            </div>\n        </section>\n    )\n}\n\nexport default Works\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport QiitaItems, { Post as QiitaPost } from '../components/abouts/QiitaItems'\nimport Header from '../components/Header'\nimport GitHubRepos, { Repo } from '../components/abouts/GitHubRepos'\nimport Head from '../components/Head'\nimport Career from '../components/abouts/Career'\nimport Certification from '../components/abouts/Certification'\nimport Skills from '../components/abouts/Skills'\nimport TechBlog from '../components/abouts/TechBlog'\nimport Slides, { Item as SlideItem } from '../components/abouts/Slides'\nimport Works from '../components/abouts/Works'\n\ntype User = {\n  name: string\n  github: string\n  twitter: string\n  qiita: string\n  speaker_deck: string\n  facebook: string\n  linkedin: string\n}\n\ntype Skill = {\n  type: string\n  level: number\n}\n\ntype HomeIndexProps = {\n  data: {\n    allQiitaPost: {\n      edges: QiitaPost[]\n    }\n    allGithubData: {\n      edges: [\n        {\n          node: {\n            data: {\n              allGithubData: {\n                edges: Repo[]\n              }\n            }\n          }\n        }\n      ]\n    }\n    allSlides: {\n      edges: [\n        {\n          node: {\n            items: SlideItem[]\n          }\n        }\n      ]\n    }\n    site: {\n      siteMetadata: {\n        user: User\n        skills: Skill[]\n      }\n    }\n  }\n}\n\nconst HomeIndex: React.FC<HomeIndexProps> = ({ data }) => {\n  const qiitaPosts = data.allQiitaPost.edges\n  const repos = data.allGithubData.edges[0].node.data.allGithubData.edges\n  const { user } = data.site.siteMetadata\n  const slides = data.allSlides.edges[0].node.items.filter(function (item, index) {\n    return (index <= 4);\n  });\n\n  return (\n    <Layout>\n      <Head />\n      <Header user={user} />\n      <div id=\"main\">\n        <h1>About</h1>\n        <Skills />\n        <Career />\n        {repos && repos.length > 0 && (\n          <GitHubRepos repos={repos} user={user.github} />\n        )}\n        <Certification />\n        {slides && slides.length > 0 && (\n          <Slides items={slides} user={user.speaker_deck} />\n        )}\n        <TechBlog />\n        {qiitaPosts && qiitaPosts.length > 0 && (\n          <QiitaItems posts={qiitaPosts} user={user.qiita} />\n        )}\n        <Works />\n      </div>\n    </Layout>\n  )\n}\n\nexport default HomeIndex\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        skills {\n          type\n          level\n        }\n        user {\n          name\n          github\n          qiita\n          twitter\n          facebook\n          speaker_deck\n          linkedin\n        }\n      }\n    }\n    allQiitaPost {\n      edges {\n        node {\n          id\n          title\n          url\n          created_at\n        }\n      }\n    }\n    allSlides(filter: { items: { elemMatch: { title: { ne: null } } } }) {\n      edges {\n        node {\n          items {\n            guid\n            title\n            link\n            thumbnail\n            pubDate\n          }\n        }\n      }\n    }\n    allGithubData {\n      edges {\n        node {\n          data {\n            allGithubData {\n              edges {\n                node {\n                  id\n                  name\n                  description\n                  url\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}